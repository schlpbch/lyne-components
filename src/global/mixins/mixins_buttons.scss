// ----------------------------------------------------------------------------------------------------
// Buttons Mixins: To be re-used in lyne-button & lyne-link mainly
// ----------------------------------------------------------------------------------------------------

@mixin buttonReset {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: border-box;
  margin: 0;
  outline: none;
  border: none;
  border-radius: 0;
  padding: 0;
  background: none;
  -webkit-tap-highlight-color: transparent;
}

@mixin buttonVariables {
  --font-family: var(--typo-type-face-sbb-bold);
  --font-size: var(--lyne-font-size-text-xs);
  --letter-spacing: var(--typo-letter-spacing-body-text);
  --line-height: var(--typo-line-height-body-text);
  --icon-size: var(--size-icon-ui-small);
  --line-through-height-disabled: 2;
  --line-through-icon-button-padding-inline: 12;

  // we use primary button styles as default values
  --color-active-background: var(--color-red150-default);
  --color-active-border: var(--color-red150-default);
  --color-active-text: var(--color-cloud-default);
  --color-default-background: var(--color-red-default);
  --color-default-border: var(--color-red-default);
  --color-default-text: var(--color-white-default);
  --color-disabled-background: var(--color-milk-default);
  --color-disabled-border: var(--color-milk-default);
  --color-disabled-text: var(--color-platinum-default);
  --color-hover-background: var(--color-red125-default);
  --color-hover-border: var(--color-red125-default);
  --color-hover-text: var(--color-milk-default);

  --border-width: var(--border-width-2x);
  --border-radius: var(--border-radius-16x);
  --min-height: var(--size-form-element-l-min-height);
  --transition-duration: var(--animation-duration-2x);
  --transition-easing-function: var(--animation-easing);
  --padding-block-min: var(--spacing-fixed-1x);
  --padding-inline: var(--spacing-fixed-8x);
  --gap: var(--spacing-fixed-2x);

  --shadow-1-default-color: var(--color-red-alpha-20);
  --shadow-1-default-blur: 16;
  --shadow-1-default-offset-x: 0;
  --shadow-1-default-offset-y: 2;
  --shadow-1-default-spread: 0;
  --shadow-2-default-color: var(--color-red125-alpha-20);
  --shadow-2-default-blur: 4;
  --shadow-2-default-offset-x: 0;
  --shadow-2-default-offset-y: 1;
  --shadow-2-default-spread: 0;

  --shadow-1-hover-color: var(--color-red-alpha-20);
  --shadow-1-hover-blur: 8;
  --shadow-1-hover-offset-x: 0;
  --shadow-1-hover-offset-y: 1;
  --shadow-1-hover-spread: 0;
  --shadow-2-hover-color: var(--color-red125-alpha-20);
  --shadow-2-hover-blur: 2;
  --shadow-2-hover-offset-x: 0;
  --shadow-2-hover-offset-y: 1;
  --shadow-2-hover-spread: 0;

  @include mq($from: medium) {
    --padding-inline: var(--spacing-fixed-10x);
    --line-through-icon-button-padding-inline: 16;
  }
}

@mixin buttonPrimaryNegativeVariables {
  --color-active-background: var(--color-cloud-default);
  --color-active-border: var(--color-cloud-default);
  --color-active-text: var(--color-red150-default);
  --color-default-background: var(--color-white-default);
  --color-default-border: var(--color-white-default);
  --color-default-text: var(--color-red-default);
  --color-disabled-background: var(--color-black-alpha-10);
  --color-disabled-border: var(--color-black-alpha-0);
  --color-disabled-text: var(--color-white-alpha-60);
  --color-hover-background: var(--color-milk-default);
  --color-hover-border: var(--color-milk-default);
  --color-hover-text: var(--color-red125-default);

  --shadow-1-default-color: var(--color-smoke-alpha-20);
  --shadow-1-default-blur: 16;
  --shadow-1-default-offset-x: 0;
  --shadow-1-default-offset-y: 2;
  --shadow-1-default-spread: 0;
  --shadow-2-default-color: var(--color-metal-alpha-20);
  --shadow-2-default-blur: 4;
  --shadow-2-default-offset-x: 0;
  --shadow-2-default-offset-y: 1;
  --shadow-2-default-spread: 0;

  --shadow-1-hover-color: var(--color-smoke-alpha-20);
  --shadow-1-hover-blur: 16;
  --shadow-1-hover-offset-x: 0;
  --shadow-1-hover-offset-y: 2;
  --shadow-1-hover-spread: 0;
  --shadow-2-hover-color: var(--color-metal-alpha-20);
  --shadow-2-hover-blur: 4;
  --shadow-2-hover-offset-x: 0;
  --shadow-2-hover-offset-y: 1;
  --shadow-2-hover-spread: 0;
}

@mixin buttonSecondaryVariables {
  --color-active-background: var(--color-cloud-default);
  --color-active-border: var(--color-cloud-default);
  --color-active-text: var(--color-anthracite-default);
  --color-default-background: var(--color-white-default);
  --color-default-border: var(--color-cloud-default);
  --color-default-text: var(--color-charcoal-default);
  --color-disabled-background: var(--color-milk-default);
  --color-disabled-border: var(--color-milk-default);
  --color-disabled-text: var(--color-platinum-default);
  --color-hover-background: var(--color-milk-default);
  --color-hover-border: var(--color-cloud-default);
  --color-hover-text: var(--color-iron-default);

  --shadow-1-default-color: var(--color-platinum-alpha-20);
  --shadow-1-default-blur: 16;
  --shadow-1-default-offset-x: 0;
  --shadow-1-default-offset-y: 2;
  --shadow-1-default-spread: 0;
  --shadow-2-default-color: var(--color-cement-alpha-20);
  --shadow-2-default-blur: 4;
  --shadow-2-default-offset-x: 0;
  --shadow-2-default-offset-y: 1;
  --shadow-2-default-spread: 0;

  --shadow-1-hover-color: var(--color-platinum-alpha-20);
  --shadow-1-hover-blur: 16;
  --shadow-1-hover-offset-x: 0;
  --shadow-1-hover-offset-y: 2;
  --shadow-1-hover-spread: 0;
  --shadow-2-hover-color: var(--color-cement-alpha-20);
  --shadow-2-hover-blur: 4;
  --shadow-2-hover-offset-x: 0;
  --shadow-2-hover-offset-y: 1;
  --shadow-2-hover-spread: 0;
}

@mixin buttonSecondaryNegativeVariables {
  --color-active-background: transparent;
  --color-active-border: var(--color-cloud-default);
  --color-active-text: var(--color-cloud-default);
  --color-default-background: transparent;
  --color-default-border: var(--color-white-default);
  --color-default-text: var(--color-white-default);
  --color-disabled-background: var(--color-black-alpha-10);
  --color-disabled-border: var(--color-black-alpha-0);
  --color-disabled-text: var(--color-aluminium-default);
  --color-hover-background: transparent;
  --color-hover-border: var(--color-milk-default);
  --color-hover-text: var(--color-milk-default);
}

@mixin buttonSizeMVariables {
  --border-width: var(--border-width-1x);
  --min-height: var(--size-form-element-m-min-height);
  --padding-inline: var(--spacing-fixed-5x);
  --line-through-icon-button-padding-inline: 10;

  @include mq($from: medium) {
    --padding-inline: var(--spacing-fixed-8x);
    --line-through-icon-button-padding-inline: 12;
  }
}

@mixin button {
  @include buttonReset;

  position: relative;
  display: flex;
  gap: pxToRem(var(--gap));
  align-items: center;
  transition-duration: var(--transition-duration);
  transition-timing-function: var(--transition-easing-function);
  transition-property: background-color, color, border-color, box-shadow, margin,
    min-height, padding, width;
  min-height: pxToRem(var(--min-height));
  border: pxToRem(var(--border-width)) solid var(--color-default-border);
  border-radius: pxToRem(var(--border-radius));
  background-color: var(--color-default-background);

  // The padding value is only a minimal padding to preserve a padding if the content becomes larger than intended.
  // Positioning of the content is made by flexbox vertical centering.
  // The real padding displayed is larger than the defined value below.
  padding-block: pxToRem(var(--padding-block-min));
  padding-inline: pxToRem(var(--padding-inline));
  color: var(--color-default-text);
  font-family: var(--font-family);
  font-size: pxToRem(var(--font-size));
  font-weight: normal;
  letter-spacing: var(--letter-spacing);
  line-height: var(--line-height);
  -webkit-font-smoothing: antialiased;

  // TODO: Find out and describe the purpose
  &::before {
    position: absolute;
    content: "";
    inset: pxToRem(var(--border-width), true);
    border-radius: pxToRem(var(--border-radius));
    border: pxToRem(var(--border-width)) solid var(--color-default-border);
    z-index: -1;
  }

  @include ifForcedColors {
    border: pxToRem(1) solid windowText;
  }

  @include visibleFocus;
}

@mixin buttonShadowNotDisabled {
  box-shadow: pxToRem(var(--shadow-1-default-offset-x))
      pxToRem(var(--shadow-1-default-offset-y))
      pxToRem(var(--shadow-1-default-blur))
      pxToRem(var(--shadow-1-default-spread)) var(--shadow-1-default-color),
    pxToRem(var(--shadow-2-default-offset-x))
      pxToRem(var(--shadow-2-default-offset-y))
      pxToRem(var(--shadow-2-default-blur))
      pxToRem(var(--shadow-2-default-spread)) var(--shadow-2-default-color);
}

@mixin buttonIcon {
  display: block;
  width: pxToRem(var(--icon-size));
  height: pxToRem(var(--icon-size));
  color: currentColor;
}

@mixin buttonFocusAndHover {
  --translate-y-content-hover: -1;
  --min-height-hover: calc(var(--min-height) + 2 * var(--border-width));

  color: var(--color-hover-text);
  background-color: var(--color-hover-background);
  border-color: var(--color-hover-border);
  min-height: pxToRem(var(--min-height-hover));
  margin: pxToRem(var(--border-width), true);
  padding-inline: pxToRem(calc(var(--padding-inline) + var(--border-width)));

  box-shadow: pxToRem(var(--shadow-1-hover-offset-x))
      pxToRem(var(--shadow-1-hover-offset-y))
      pxToRem(var(--shadow-1-hover-blur)) pxToRem(var(--shadow-1-hover-spread))
      var(--shadow-1-hover-color),
    pxToRem(var(--shadow-2-hover-offset-x))
      pxToRem(var(--shadow-2-hover-offset-y))
      pxToRem(var(--shadow-2-hover-blur)) pxToRem(var(--shadow-2-hover-spread))
      var(--shadow-2-hover-color);
}

@mixin buttonActive {
  color: var(--color-active-text);
  background-color: var(--color-active-background);
  border-color: var(--color-active-border);
}
